#pragma checksum "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\Admin\TradeCurrency.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f108dcb8e1211c2b42036eb1dfaaa4acfd99cade"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_TradeCurrency), @"mvc.1.0.view", @"/Views/Admin/TradeCurrency.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\_ViewImports.cshtml"
using CryptoCityWallet.FrontEnd;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\_ViewImports.cshtml"
using CryptoCityWallet.FrontEnd.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f108dcb8e1211c2b42036eb1dfaaa4acfd99cade", @"/Views/Admin/TradeCurrency.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab89ba2c61106176ea4978ca965633e6e6efe04b", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_TradeCurrency : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "Partials/Confirm.cshtml", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "Partials/Cancel.cshtml", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\Admin\TradeCurrency.cshtml"
  

    ViewBag.Title = "WCC Admin | Trade " ;
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div id=""content"" class=""content"">
    <!-- begin breadcrumb -->
    <ol class=""breadcrumb float-xl-right"">
        <li class=""breadcrumb-item""><a href=""javascript:;"">Convert</a></li>
        <li class=""breadcrumb-item active"">All channels</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class=""page-header"">Trade  <small> </small></h1>

    <div class=""row"">


        <div class=""col-md-12"">
            <div class=""panel panel-inverse"">
                <div class=""panel-heading"">
");
            WriteLiteral(@"                    <h4 class=""panel-title"">Trade</h4>
                </div>
                <div class=""panel-body"">
                    <div class=""row"">
                       
                            <div class=""col-md-8"">
                                <div class=""form-group"">

                                    <label>Amount</label>
                                    <input type=""number""");
            BeginWriteAttribute("name", " name=\"", 1766, "\"", 1773, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"form-control\"");
            BeginWriteAttribute("readonly", " readonly=\"", 1795, "\"", 1806, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <label><br></label>
                                <div class=""form-group"">
                                    <button type=""submit"" class=""btn btn-primary"">Check Deposit</button>

                                </div>

                            </div>
                  
                    </div>
                    <div class=""row"">
                        <div class=""col-md-8"">
                            <div class=""form-group"">
                                <label>Rate Information</label>
                                <input");
            BeginWriteAttribute("type", " type=\"", 2527, "\"", 2534, 0);
            EndWriteAttribute();
            BeginWriteAttribute("name", " name=\"", 2535, "\"", 2542, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""form-control""  >
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <label><br></label>
                            <div class=""form-group"">
                                <button type=""submit"" class=""btn btn-primary"">Check Current Rate</button>
                            </div>
                        </div>
                    </div>

                    <div class=""row"">
                        <div class=""col-md-4"">
                            <div class=""form-group"">
                                <label>Trade</label>
                                <input type=""number""");
            BeginWriteAttribute("name", " name=\"", 3240, "\"", 3247, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""form-control"">
                            </div>
                        </div>
                        <div class=""col-md-4"">
                            <label>Set</label>
                            <div class=""form-group"">
                                <input type=""number""");
            BeginWriteAttribute("name", " name=\"", 3542, "\"", 3549, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""form-control"">
                            </div>
                        </div>
                    </div>
                    <div class=""form-group"">
                        <button type=""submit"" class=""btn btn-inverse"">Submit</button>
                    </div>
                </div>
            </div>
        </div>


        <div class=""col-md-12"">
            <div class=""panel panel-inverse"">
                <div class=""panel-heading"">
");
            WriteLiteral(@"                    <h4 class=""panel-title"">Trade List</h4>
                </div>
                <div class=""table-responsive"">
                    <div class=""panel-body"">

                        <table class=""table table-bordered"" id=""dataTable"">
                            <thead>
                                <tr>
                                    <th>Date of Request</th>
                                    <th>ID (Code)</th>
                                    <th>Name</th>
                                    <th>From</th>
                                    <th>To</th>
                                    <th>Withdrawal Amount</th>
                                    <th>Currency</th>
                                    <th>Txid</th>
                                    <th>Status</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
");
            WriteLiteral(@"                                <tr>
                                    <td>

                                        Html.DisplayFor(modelItem => item.RequestedOn)
                                    </td>
                                    <td>
                                        Html.DisplayFor(modelItem => item.ID)
                                    </td>

                                    <td>
                                        Html.DisplayFor(modelItem => item.FirstName)   Html.DisplayFor(modelItem => item.LastName)
                                    </td>
                                    <td>

                                        Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        Html.DisplayFor(modelItem => item.From)
                                    </td>
                                    <td>
                                        Html.Displa");
            WriteLiteral(@"yFor(modelItem => item.To)
                                    </td>

                                    <td>
                                        Html.DisplayFor(modelItem => item.BTCAddress)
                                    </td>
                                    <td>

                                        Html.DisplayFor(modelItem => item.Txid)
                                    </td>
                                    <td>

                                        Html.DisplayFor(modelItem => item.Status)
                                    </td>

");
            WriteLiteral(@"
                                    <td>

                                        <button class=""btn btn-primary btn-block"" id=""send"" data-toggle=""modal"" data-target=""#confirmModal"">Process</button>
                                        <button class=""btn btn-primary btn-block "" id=""send"" data-toggle=""modal"" data-target=""#cancelModal"">Cancel</button>
                                    </td>




                                </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
        <!-- end panel -->
    </div>
    <!-- end col-4 -->

    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f108dcb8e1211c2b42036eb1dfaaa4acfd99cade11632", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f108dcb8e1211c2b42036eb1dfaaa4acfd99cade12753", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        <th>Date of Request</th>
            <th>ID (Code)</th>
            <th>Name</th>
            <th>From</th>
            <th>To</th>
            <th>Withdrawal Amount</th>
            <th>Currency</th>
            <th>Txid</th>

        $('#send').click(function () {
                var date_ = $(this).closest(""tr"").find(""td"").eq(0).text();
                var membercode_ = $(this).closest(""tr"").find(""td"").eq(1).text();
                var name_ = $(this).closest(""tr"").find(""td"").eq(2).text();
                var from = $(this).closest(""tr"").find(""td"").eq(3).text();
                var to = $(this).closest(""tr"").find(""td"").eq(4).text();
                var amount = $(this).closest(""tr"").find(""td"").eq(5).text();
                var currency = $(this).closest(""tr"").find(""td"").eq(6).text();
                var txid = $(this).closest(""tr"").find(""td"").eq(7).text();
                document.getElementById('dateDetails').innerHTML = '<b> Date : ' + date_ + '</b>';
          ");
                WriteLiteral(@"      document.getElementById('memcodeDetails').innerHTML = '<b> ID : ' + membercode_ + '</b>';
                document.getElementById('memnameDetails').innerHTML = '<b> ID : ' + name_ + '</b>';
                document.getElementById('fromDetails').innerHTML = '<b> From : ' + from + '</b>';
                document.getElementById('toDetails').innerHTML = '<b> To: ' + to + '</b>';

                document.getElementById('currencyDetails').innerHTML = '<b> From : ' + currency + '</b>';
                document.getElementById('amountDetails').innerHTML = '<b> Total Amount : ' + amount + '</b>';

                document.getElementById('txidDetails').innerHTML = '<b> TxID : ' + txid + '</b>';

            });


        //           $('#send').click(function() {
        //            var date_ = $(this).closest(""tr"").find(""td"").eq(0).text();
        //            var membercode_ = $(this).closest(""tr"").find(""td"").eq(1).text();
        //            var membername_ = $(this).closest(""tr"").find(""t");
                WriteLiteral(@"d"").eq(3).text();
        //            var total_amount= $(this).closest(""tr"").find(""td"").eq(4).text();
        //            var txid = $(this).closest(""tr"").find(""td"").eq(5).text();
        //            document.getElementById('dateDetails').innerHTML = '<b> Date : ' + date_ + '</b>';
        //            document.getElementById('memcodeDetails').innerHTML = '<b> Member Code : ' + membercode_ + '</b>';
        //            document.getElementById('memnameDetails').innerHTML = '<b> Member Name : ' + membername_+ '</b>';
        //            document.getElementById('amountDetails').innerHTML = '<b> Request Amount  : ' + total_amount  + '</b>';
        //            document.getElementById('txidDetails').innerHTML = '<b> TxID : ' +  txid+ '</b>';

        //});






        $(""#confirm"").on(""submit"", function (event) {
            event.preventDefault();

            var formData = {
                'txid': $('input[name=email]').val(),
                'amount': $('input[name=email]'");
                WriteLiteral(@").val(),
                'email': $('input[name=email]').val()//for get email
            };
            console.log(formData);

            //$.ajax({
            //url: ""/Withdraw/SendADA"",
            //type: ""post"",
            //data: formData,
            //success: function(d) {
            //alert(""Sent Successfully"");
            //}
            //});
            //});</script>
 

        <script>
            $(document).ready(function () {


                var table = $('#dataTable').DataTable();



                $.fn.dataTable.ext.search.push(
                    function (settings, data, dataIndex) {
                        var min = $('#min').datepicker(""getDate"");
                        var max = $('#max').datepicker(""getDate"");
                        var startDate = new Date(data[3]);
                        if (min == null && max == null) { return true; }
                        if (min == null && startDate <= max) { return true; }
                        if");
                WriteLiteral(@" (max == null && startDate >= min) { return true; }
                        if (startDate <= max && startDate >= min) { return true; }
                        return false;

                    });


                $(""#min"").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
                $(""#max"").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
                var table = $('#dataTable').DataTable();





                //    $(""#confirm"").on(""submit"", function(event) {
                //    event.preventDefault();

                //    var formData = {
                //        'txid': $('input[name=email]').val(),
                //        'amount': $('input[name=email]').val(),
                //        'email': $('input[name=email]').val()//for get email
                //    };
                //    console.log(formData);

                //    $.ajax({
                //        url: """);
                WriteLiteral(@"/Withdraw/SendADA"",
                //        type: ""post"",
                //        data: formData,
                //        success: function(d) {
                //            alert(""Sent Successfully"");
                //        }
                //    });
                //});



                $('#min, #max').change(function () {
                    table.draw();
                });






            });
            var d = new Date();

            var month = d.getMonth() + 1;
            var day = d.getDate();

            var output = d.getFullYear() + '/' +
                (month < 10 ? '0' : '') + month + '/' +
                (day < 10 ? '0' : '') + day;
            $('#dataTable').DataTable({
                stateSave: true,
                autoWidth: true,
                dom: 'Bfrtip',
                buttons: [
                    'copy', {
                        extend: 'csv',
                        orientation: 'landscape',
                        ti");
                WriteLiteral(@"tle: 'WCC.com',
                        messageTop: 'The information in this table is copyright to WCC.',
                        messageBottom: output
                    }, {
                        extend: 'excel',
                        orientation: 'landscape',
                        extend: 'excelHtml5',
                        title: 'WCC.com',
                        messageTop: 'The information in this table is copyright to WCC.',
                        messageBottom: output
                    }, {
                        extend: 'pdf',
                        orientation: 'landscape',
                        extend: 'pdfHtml5',
                        title: 'WCC.com',
                        messageTop: 'The information in this table is copyright to WCC.',
                        messageBottom: output
                    }, {
                        extend: 'print',
                        orientation: 'landscape',
                        title: 'WCC.com',
                 ");
                WriteLiteral("       messageTop: \'The information in this table is copyright to WCC.\',\r\n                        messageBottom: output\r\n                    }\r\n                ]\r\n            });\r\n\r\n        </script>\r\n   \r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
