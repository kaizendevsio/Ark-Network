#pragma checksum "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\Admin\Close.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b44473609644e40dd0510737be34194e6eddabb9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_Close), @"mvc.1.0.view", @"/Views/Admin/Close.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\_ViewImports.cshtml"
using CryptoCityWallet.FrontEnd;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\_ViewImports.cshtml"
using CryptoCityWallet.FrontEnd.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b44473609644e40dd0510737be34194e6eddabb9", @"/Views/Admin/Close.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab89ba2c61106176ea4978ca965633e6e6efe04b", @"/Views/_ViewImports.cshtml")]
    public class Views_Admin_Close : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<MembersVM>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(" \r\n");
#nullable restore
#line 2 "C:\Projects\Net Core\CryptoCityWallet\CryptoCityWallet.FrontEnd\Views\Admin\Close.cshtml"
  

    ViewBag.Title = "WCC Admin | Members";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"<div id=""content"" class=""content"">
    <!-- begin breadcrumb -->
    <ol class=""breadcrumb float-xl-right"">
        <li class=""breadcrumb-item""><a href=""javascript:;"">Members</a></li>
        <li class=""breadcrumb-item active"">All channels</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class=""page-header"">Member List  <small> </small></h1>

    <div class=""row"">



        <div class=""col-md-12"">
            <div class=""panel panel-inverse"">
                <div class=""panel-heading"">
");
            WriteLiteral(@"                    <h4 class=""panel-title"">-</h4>
                </div>
                <div class=""panel-body"">
                    <div class=""form-group"">
                        <!-- inline -->
                        <label>SORT :</label> &nbsp;
                        <div>
                            <input type=""radio"" id=""inlineCssRadio1"" name=""sort"">
                            <label for=""inlineCssRadio1"">DESC</label>
                            </br>

                            <input type=""radio"" id=""inlineCssRadio1"" name=""sort"" />
                            <label for=""inlineCssRadio1"">ASC</label>
                        </div>
                    </div>

                    <div class=""form-group"">
                        <label>Keyword</label>
                        <input");
            BeginWriteAttribute("type", " type=\"", 2206, "\"", 2213, 0);
            EndWriteAttribute();
            BeginWriteAttribute("name", " name=\"", 2214, "\"", 2221, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"form-control\">\r\n                    </div>\r\n");
            WriteLiteral(@"                    <div class=""form-group"">
                        <button type=""submit"" class=""btn btn-primary"">Submit</button>
                    </div>
                </div>
            </div>
        </div>

    </div>



    <div class=""col-md-12"">
        <div class=""panel panel-inverse"">
            <div class=""panel-heading"">
                <div class=""panel-heading-btn"">
                    <a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-default"" data-click=""panel-expand""><i class=""fa fa-expand""></i></a>
                    <a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-success"" data-click=""panel-reload""><i class=""fa fa-redo""></i></a>
                    <a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-warning"" data-click=""panel-collapse""><i class=""fa fa-minus""></i></a>
                    <a href=""javascript:;"" class=""btn btn-xs btn-icon btn-circle btn-danger"" data-click=""panel-remove""><i class=""fa fa-times""></i></a>
        ");
            WriteLiteral("        </div>\r\n                <h4 class=\"panel-title\">History</h4>\r\n            </div>\r\n            <div class=\"table-responsive\">\r\n                <div class=\"panel-body\">\r\n");
            WriteLiteral(@"

                    <table class=""table table-bordered"" id=""dataTable"">
                        <thead>
                            <tr>
                                <th>Closing Date</th>
                                <th>Dividends</th>
                                <th>Member Name (ID)</th>
                            </tr>
                        </thead>
                        <tbody>
");
            WriteLiteral(@"                            <tr>
                                <td>

                                    Html.DisplayFor(modelItem => item.CreatedOn)
                                </td>
                                <td>
                                    Html.DisplayFor(modelItem => item.ID)
                                </td>

                                <td>
                                    Html.DisplayFor(modelItem => item.FirstName)   Html.DisplayFor(modelItem => item.LastName)
                                </td>
                             
                                


                            </tr>
                            }

                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
    <!-- end panel -->
</div>
<!-- end col-4 -->
</div>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <style>
        .toggle-button {
            margin: 5px 0;
            border-radius: 20px;
            border: 2px solid #D0D0D0;
            height: 24px;
            cursor: pointer;
            width: 50px;
            position: relative;
            display: inline-block;
            user-select: none;
            -webkit-user-select: none;
            -ms-user-select: none;
            -moz-user-select: none;
        }

            .toggle-button span {
                position: absolute;
                left: 0;
                top: 0;
                border-radius: 100%;
                width: 26px;
                height: 26px;
                background-color: white;
                float: left;
                margin: -3px 0 0 -3px;
                border: 2px solid #D0D0D0;
                transition: left 0.3s;
            }

        .toggle-button-selected {
            background-color: #83B152;
            border: 2px solid #7DA652;
        }

        ");
                WriteLiteral(@"    .toggle-button-selected span {
                left: 26px;
                top: 0;
                margin: 0;
                border: none;
                width: 24px;
                height: 24px;
                box-shadow: 0 0 4px rgba(0,0,0,0.1);
            }
    </style>
    <script>

$('.toggle').change(function() {
     debugger;
    if($('.toggle').hasClass('off')){
        //$('#staticMapImg').hide();
    }else{
        //$('#staticMapImg').show();
    }
})


        $(document).ready(function () {


        var table = $('#dataTable').DataTable();



            $.fn.dataTable.ext.search.push(
                function (settings, data, dataIndex) {
                    var min = $('#min').datepicker(""getDate"");
                    var max = $('#max').datepicker(""getDate"");
                    var startDate = new Date(data[3]);
                    if (min == null && max == null) { return true; }
                    if (min == null && startDate <= max) { return t");
                WriteLiteral(@"rue; }
                    if (max == null && startDate >= min) { return true; }
                    if (startDate <= max && startDate >= min) { return true; }
                    return false;

                });


            $(""#min"").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
            $(""#max"").datepicker({ onSelect: function () { table.draw(); }, changeMonth: true, changeYear: true });
            var table = $('#dataTable').DataTable();





        //    $(""#confirm"").on(""submit"", function(event) {
        //    event.preventDefault();

        //    var formData = {
        //        'txid': $('input[name=email]').val(),
        //        'amount': $('input[name=email]').val(),
        //        'email': $('input[name=email]').val()//for get email
        //    };
        //    console.log(formData);

        //    $.ajax({
        //        url: ""/Withdraw/SendADA"",
        //        type: ""post"",
        //        da");
                WriteLiteral(@"ta: formData,
        //        success: function(d) {
        //            alert(""Sent Successfully"");
        //        }
        //    });
        //});



            $('#min, #max').change(function () {
                table.draw();
            });






        });
    var d = new Date();

var month = d.getMonth()+1;
var day = d.getDate();

var output = d.getFullYear() + '/' +
    (month<10 ? '0' : '') + month + '/' +
    (day<10 ? '0' : '') + day;

         $('#dataTable').DataTable({
         stateSave: true,
        autoWidth: true,
        dom: 'Bfrtip',
        buttons: [
            'copy',  { extend: 'csv',
                orientation: 'landscape',
                title: 'WCC.com',
                messageTop: 'The information in this table is copyright to WCC.',
                messageBottom: output
          } , { extend: 'excel',
                orientation: 'landscape',
                extend: 'excelHtml5',
                title: 'WCC.com',
          ");
                WriteLiteral(@"      messageTop: 'The information in this table is copyright to WCC.',
                messageBottom: output
          } , {
            extend: 'pdf',
                orientation: 'landscape',
                extend: 'pdfHtml5',
                title: 'WCC.com',
             messageTop: 'The information in this table is copyright to WCC.',
                messageBottom: output
            }, { extend: 'print',
                orientation: 'landscape',

                title: 'WCC.com',
             messageTop: 'The information in this table is copyright to WCC.',
                messageBottom: output
          }
        ]

} );

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MembersVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
